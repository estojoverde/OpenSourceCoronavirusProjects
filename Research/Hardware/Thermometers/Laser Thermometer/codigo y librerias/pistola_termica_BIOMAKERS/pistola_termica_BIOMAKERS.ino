#include <SPI.h>
#include <Wire.h>
#include <Adafruit_MLX90614.h>//Librería para controlar el termómetro I2C
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#define OLED_RESET 13
//Adafruit_SSD1306 display(OLED_RESET);  //OLED 4 PINES
Adafruit_SSD1306 display = Adafruit_SSD1306(128, 64, &Wire);
#define SSD1306_128_64

int sensor = A0;
float lecturaSensor = 0;

const int ledVerde=4;//verde
const int ledRojo=5;//rojo
const int buzzer=A2;//buzzer
const int push = A3;//pn Push
int lecturaPush = 0;//lectura del push

Adafruit_MLX90614 mlx = Adafruit_MLX90614();//se crea el objeto termónetro MLX
float TO = 0;//variable para temperatura objeto -humano

const unsigned char PROGMEM LOGO_BIOMAKERS[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE,
  0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0x7F, 0xFF, 0xFC, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x8F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0x7F, 0x00, 0xFC, 0x7F, 0xFF, 0xC7, 0xF0, 0xFF, 0xFF, 0x8F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC7,
  0x7E, 0x00, 0x7F, 0xFF, 0xFF, 0x83, 0xE1, 0xFF, 0xFF, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC7,
  0x7E, 0x3C, 0x3F, 0xFF, 0xFF, 0x83, 0xE1, 0xFF, 0xFF, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xCF,
  0x7E, 0x3E, 0x38, 0xFC, 0x1F, 0x83, 0xC1, 0xF8, 0x47, 0x1E, 0x3C, 0x1F, 0x11, 0xC1, 0xFF, 0x8F,
  0x7E, 0x3C, 0x78, 0xF0, 0x0F, 0x93, 0x91, 0xE0, 0x07, 0x1C, 0x70, 0x0F, 0x01, 0x80, 0xFF, 0x8F,
  0x7E, 0x00, 0xF8, 0xE1, 0x87, 0x93, 0x91, 0xC3, 0x0F, 0x10, 0xE1, 0xC7, 0x0F, 0x1D, 0xFF, 0x8F,
  0x7C, 0x01, 0xF8, 0xC3, 0xC7, 0x13, 0x23, 0xC7, 0x8E, 0x21, 0xE3, 0xC6, 0x1F, 0x0F, 0xFF, 0x9F,
  0x7C, 0x78, 0x70, 0xC7, 0xC7, 0x11, 0x23, 0x8F, 0x8E, 0x03, 0xC0, 0x06, 0x3F, 0x87, 0xFF, 0x9F,
  0x7C, 0x7C, 0x71, 0xC7, 0xC7, 0x18, 0x63, 0x8F, 0x0E, 0x03, 0xC0, 0x0E, 0x3F, 0xC1, 0xFF, 0xBF,
  0x7C, 0x7C, 0x71, 0xC7, 0x87, 0x38, 0xE3, 0x8F, 0x1E, 0x11, 0xC7, 0xFE, 0x3F, 0xF0, 0xFF, 0xFF,
  0x78, 0xF8, 0x71, 0xC7, 0x8E, 0x38, 0xC7, 0x8E, 0x1C, 0x31, 0xC3, 0xFC, 0x3F, 0x78, 0xFF, 0x3F,
  0x78, 0x00, 0xE1, 0xC0, 0x1E, 0x39, 0xC7, 0x80, 0x1C, 0x78, 0xE0, 0x1C, 0x7E, 0x31, 0xFE, 0x1F,
  0x78, 0x01, 0xE3, 0xE0, 0x3E, 0x3F, 0xC7, 0xC1, 0x1C, 0x78, 0xF0, 0x1C, 0x7F, 0x03, 0xFE, 0x3F,
  0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F,
  0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
  0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x00, 0x0F, 0xFF, 0xFF,
  0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF3, 0x81, 0x00, 0x20, 0x7E,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x83, 0x80, 0x20, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x13, 0xBB, 0x66, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0xB2, 0xAA, 0xAA, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x23, 0xB6, 0xAA, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x40, 0x06, 0xEE, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

void setup()
{
  Serial.begin(9600);
   mlx.begin();//se inicializa el sensor
  //  //******* LASER ****//
 pinMode(ledVerde,OUTPUT);
 pinMode(ledRojo,OUTPUT);
 pinMode(3,OUTPUT);
 pinMode(sensor,INPUT);
 pinMode(push, INPUT_PULLUP);//pull up push
 pinMode(buzzer,OUTPUT);//
 digitalWrite(buzzer,LOW);//inicia apagada 
   
  display.begin(SSD1306_SWITCHCAPVCC, 0X3C); // //Inicializa pantalla con en la dirección 0x3D para la conexión I2C. 0x02
  display.setTextSize(4);
  display.setTextColor(WHITE);
  display.clearDisplay();
  display.drawBitmap(0, 0, LOGO_BIOMAKERS, 128, 64, WHITE);
  display.display();
  delay(2000);

}

//************************* CONDICIONES **************************************//
void tempNormal()
{ 
  digitalWrite(ledVerde,HIGH);
  digitalWrite(ledRojo,LOW);
  digitalWrite(buzzer,HIGH);
  delay(110);
  digitalWrite(buzzer,LOW);
  delay(110);
  digitalWrite(buzzer,HIGH);
  delay(110);
  digitalWrite(buzzer,LOW);
  delay(110);
}
void tempAlta()// tono de temperatura alta:
{
  digitalWrite(ledVerde,LOW);
  digitalWrite(ledRojo,HIGH);
  digitalWrite(buzzer,HIGH);
  delay(2000);
  digitalWrite(buzzer,LOW);
  delay(100);
}
//******************************************************************************//



void loop()
{
  digitalWrite(ledVerde,LOW);
  digitalWrite(ledRojo,LOW);
  digitalWrite(3,HIGH);  // laser
  display.clearDisplay();
  lecturaSensor = analogRead(sensor);
  Serial.println(lecturaSensor,1);
  
  lecturaPush = digitalRead(push);//
  delay(50);//demora para evitar rebotes.
  
  if (lecturaPush == 0)
  {
    lecturaTemperatura();//
   
   if(TO<38.0) //temperatura de la persona es menor a 38ºC
    {
      tempNormal();//si la temperatura es menor que 38 grados celsius.
    }
    else if (TO>=38) //si tiene mas de 38ºC
    {
      tempAlta();//si la temperatura es mayor de 38 grados celsius.
    }
  }

  
  //****** DESPLIEGUE EN DISPLAY ******//
  display.setTextSize(2);
  display.setCursor(35, 3);
  display.print("TEMP:");
  display.setTextSize(4);
  display.setCursor(0, 25);
  display.print(TO,1);
  display.setTextSize(2);
  display.setCursor(98, 20);
  display.print("o");
   display.setTextSize(3);
  display.setCursor(110, 30);
  display.print("C");
  display.display();
  delay(50);
}


void lecturaTemperatura()//Función para tomar temperatura y promediar.
{
  for (int i = 0; i < 20; i++)
  {
    TO = mlx.readObjectTempC() + TO;
    delay(1);
  }
  TO /= 20.0;
  TO+=2.22;//calibrar el factor.
}

